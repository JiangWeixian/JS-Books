(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{275:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),a("p",[t._v("只要是它长得像，叫的像那么它就是鸭子。不用关心它到底是不是。")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),a("p",[t._v("每次之后弹出5")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),a("p",[t._v("有一个观点就是闭包会造成内存消耗以及泄露，听起来很吓人")]),t._v(" "),t._m(25),t._v(" "),a("p",[t._v("JS内部有一个垃圾回收机制，就像名字那样会回收一些不使用的变量。")]),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),a("ul",[t._m(28),t._v(" "),t._m(29),t._v(" "),a("li",[a("p",[a("strong",[t._v("预编译函数")]),t._v(" - 在分析"),a("a",{attrs:{href:"https://github.com/JiangWeixian/JS-Tips/blob/master/Grammar/JS-%E9%97%AD%E5%8C%85-%E6%9F%AF%E9%87%8C%E5%8C%96.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("柯里化"),a("OutboundLink")],1),t._v("的时候有提到这一点的优势。")])])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86","aria-hidden":"true"}},[this._v("#")]),this._v(" 基础知识")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("Cha 1th&Cha 2th&Cha 3th")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"%E9%9D%99%E6%80%81%E8%AF%AD%E8%A8%80%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80%E7%B1%BB%E5%9E%8B"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#%E9%9D%99%E6%80%81%E8%AF%AD%E8%A8%80%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%8A%A8%E6%80%81%E8%AF%AD%E8%A8%80%E7%B1%BB%E5%9E%8B","aria-hidden":"true"}},[this._v("#")]),this._v(" 静态语言类型和动态语言类型")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("JavaScript")]),this._v("是动态语言类型。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B","aria-hidden":"true"}},[this._v("#")]),this._v(" 鸭子类型")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B","aria-hidden":"true"}},[this._v("#")]),this._v(" 面向接口编程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("例如,一个对象若有push和 pop方法,并且这些方法提供了正确的实现,它就可以被当作栈来使用。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"%E5%A4%9A%E6%80%81"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#%E5%A4%9A%E6%80%81","aria-hidden":"true"}},[this._v("#")]),this._v(" 多态")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("继承实现的多态，就像是动物可以是鸭子或者其他。这一点在静态类型中特别重要，因为不需要为一种特别的类型实现方法，只要实现其父类的方法就行了。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"js---%E5%9F%BA%E4%BA%8E%E5%8E%9F%E5%9E%8B%E7%9A%84%E8%AF%AD%E8%A8%80"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js---%E5%9F%BA%E4%BA%8E%E5%8E%9F%E5%9E%8B%E7%9A%84%E8%AF%AD%E8%A8%80","aria-hidden":"true"}},[this._v("#")]),this._v(" JS - 基于原型的语言")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("clone")]),this._v("是这类语言实现继承的方式")]),this._v(" "),s("li",[s("code",[this._v("JavaScript")]),this._v("的函数既可以作为普通函数被调用,也可以作为构造器被调用。当使用"),s("code",[this._v("new")]),this._v("运算符来调用函数时,此时的函数就是一个构造器。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"thiscallapply"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thiscallapply","aria-hidden":"true"}},[this._v("#")]),this._v(" this&call&apply")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v("this")]),this._v("在函数运行的时候指定。")]),this._v(" "),s("li",[s("code",[this._v("apply&call")]),this._v(" - 改变"),s("code",[this._v("this")]),this._v("的指向。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bind","aria-hidden":"true"}},[this._v("#")]),this._v(" bind")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("和"),a("code",[t._v("call")]),t._v("和"),a("code",[t._v("apply")]),t._v("区别在于，"),a("code",[t._v("bind")]),t._v("是返回一个函数，并不是立即执行。可以理解为"),a("code",[t._v("apply&bind")]),t._v("的柯里化实现。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"%E9%97%AD%E5%8C%85%E5%92%8C%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E5%91%A8%E6%9C%9F"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#%E9%97%AD%E5%8C%85%E5%92%8C%E5%8F%98%E9%87%8F%E5%A3%B0%E6%98%8E%E5%91%A8%E6%9C%9F","aria-hidden":"true"}},[this._v("#")]),this._v(" 闭包和变量声明周期")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("首先")]),this._v("要知道JS只有函数生命周期而没有块的生命周期。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在"),s("strong",[this._v("你不知道JS")]),this._v("中的解释是，每次循环就只有一个变量"),s("code",[this._v("i")]),this._v("存在这个生命周期中。而"),s("code",[this._v("onclick")]),this._v("需要的是五个不同的变量。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("code",[t._v("hack")]),t._v("方法就是对每个"),a("code",[t._v("onclick-function")]),t._v("绑定新的"),a("code",[t._v("i")]),t._v("到本身的生命周期上。非"),a("code",[t._v("ES6")]),t._v("的实现方案是：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" len"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onclick "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这样"),s("code",[this._v("onclick")]),this._v("事件就有了存在其生命周期的变量"),s("code",[this._v("i")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%97%AD%E5%8C%85"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E9%97%AD%E5%8C%85","aria-hidden":"true"}},[this._v("#")]),this._v(" 实现一个闭包")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("IIFE")]),this._v(" "),s("li",[this._v("或者就是函数内部返回一个函数")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"%E5%92%8C%E5%86%85%E5%AD%98%E5%85%B3%E7%B3%BB"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#%E5%92%8C%E5%86%85%E5%AD%98%E5%85%B3%E7%B3%BB","aria-hidden":"true"}},[this._v("#")]),this._v(" 和内存关系")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("p",[this._v("内存消耗的问题 - 如果讲这些变量放在闭包内部或者是全局中，都是一样的消耗")])]),this._v(" "),s("li",[s("p",[this._v("内存泄露的问题 -")]),this._v(" "),s("blockquote",[s("p",[this._v("如果闭包的作用域链中保存着一些DOM节点,这时候就有可能造成内存泄露;两个对象之间形成了循环引用存在内存泄漏")])]),this._v(" "),s("p",[this._v("但是以上问题都不是闭包引起的")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("我们可以使用这个方法来避免垃圾回收，把那些不使用的变量设置为null就行了")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"%E8%8A%82%E6%B5%81%E5%88%86%E6%97%B6%E9%A2%84%E7%BC%96%E8%AF%91%E5%87%BD%E6%95%B0"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#%E8%8A%82%E6%B5%81%E5%88%86%E6%97%B6%E9%A2%84%E7%BC%96%E8%AF%91%E5%87%BD%E6%95%B0","aria-hidden":"true"}},[this._v("#")]),this._v(" 节流&分时&预编译函数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("节流函数 - 思想就是将一个函数延迟执行，在下一次需要再一次执行的时候。如果这个延迟函数存在，暂不执行。直到上一个延迟函数被执行完毕。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("li",[s("p",[this._v("分时函数 - 例如当需要渲染一些列节点("),s("strong",[this._v("上千上百的时候")]),this._v(")。不再一次性渲染全部而是分阶段进行，每次渲染部分。直到全部完成。")])])}],!1,null,null,null);s.default=n.exports}}]);